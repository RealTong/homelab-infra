---
version: "3.4"

services:
  authentik-server:
    image: ${AUTHENTIK_IMAGE:-ghcr.io/goauthentik/server}:${AUTHENTIK_TAG:-2024.2.2}
    restart: always
    command: server
    env_file:
      - ../.env
    networks:
      - service_network
    environment:
      AUTHENTIK_REDIS__HOST: REDIS_HOST
      AUTHENTIK_REDIS__DB: 1
      AUTHENTIK_REDIS__PASSWORD: REDIS_PASSWORD
      AUTHENTIK_POSTGRESQL__HOST: POSTGRES_HOST
      AUTHENTIK_POSTGRESQL__USER: POSTGRES_USER
      AUTHENTIK_POSTGRESQL__NAME: POSTGRES_DB
      AUTHENTIK_POSTGRESQL__PASSWORD: POSTGRES_PASSWORD
      AUTHENTIK_SECRET_KEY: AUTNENTIK_SECRET_KEY
    volumes:
      - ./media:/media
      - ./custom-templates:/templates
      - ./static:/static
  authentik-worker:
    image: ${AUTHENTIK_IMAGE:-ghcr.io/goauthentik/server}:${AUTHENTIK_TAG:-2024.2.2}
    restart: always
    command: worker
    networks:
      - service_network
    environment:
      AUTHENTIK_REDIS__HOST: REDIS_HOST
      AUTHENTIK_REDIS__DB: 1
      AUTHENTIK_REDIS__PASSWORD: REDIS_PASSWORD
      AUTHENTIK_POSTGRESQL__HOST: POSTGRES_HOST
      AUTHENTIK_POSTGRESQL__USER: POSTGRES_USER
      AUTHENTIK_POSTGRESQL__NAME: POSTGRES_DB
      AUTHENTIK_POSTGRESQL__PASSWORD: POSTGRES_PASSWORD
      AUTHENTIK_SECRET_KEY: AUTNENTIK_SECRET_KEY
    user: root
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./media:/media
      - ./certs:/certs
      - ./custom-templates:/templates
      - ./static:/static
networks:
  service_network:
    external: true
